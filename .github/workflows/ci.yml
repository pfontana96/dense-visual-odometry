name: CI

on: [push]

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.ref_name }}
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  Quality:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.x
      - run: pip install flake8
      - run: python -m flake8

  BuildAndPublishImage:
    needs:
      - Quality
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ env.DOCKER_USER }}
      #     password: ${{ env.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image and push it to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: '.'
          file: ./Dockerfile
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          push: false

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Run tests on Docker container
        uses: addnab/docker-run-action@v3
          with:
            image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            run: |
              python -m pip install pytest pytest-cov coveralls==3.0.1
              python -m pytest --cov=src/ --cov-report term-missing --color=yes -s .
              coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}              

  # Test:
  #   needs:
  #     - BuildAndPublishImage
  #   runs-on: Ubuntu-20.04
  #   container: 
  #     image: docker://${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  #   steps:
  #     - name: Installs test dependencies
  #       run: pip install pytest

  #     - name: Runs tests
  #       run: python -m pytest --cov=src/ --cov-report term-missing --color=yes -s .

  #     - name: Upload data to Coveralls
  #       run: |
  #         python -m pip install coveralls==3.0.1
  #         coveralls --service=github
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Test:
  #   runs-on: Ubuntu-20.04

  #   env:
  #     IMAGE_NAME: ${{ github.repository }}
  #     IMAGE_TAG: ${{ github.ref_name }}
  #     # DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  #     # DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #     - name: Build Image
  #       run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

  #     - name: Run tests on Docker container
  #       run: >
  #         docker run $IMAGE_NAME:$IMAGE_TAG | pip install pytest pytest-cov | 

  #     - name: Install test dependencies
  #       run: pip install pytest pytest-cov
      
  #     - name: Run tests
  #       run: python -m pytest --cov=src/ --cov-report term-missing --color=yes -s .

  #     - name: Upload data to Coveralls
  #       run: |
  #         python -m pip install coveralls==3.0.1
  #         coveralls --service=github
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       # uses: coverallsapp/github-action@master
  #       # with:
  #       #   github-token: ${{ secrets.GITHUB_TOKEN }}
  #       #   path-to-lcov: coverage.xml
